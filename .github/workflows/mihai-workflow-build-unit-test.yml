name: Mihai workflow build with unit test
run-name: ${{github.actor}} is running the build and tests

on:
  push:
    branches:
      - main
  pull_request:
jobs:
  build-image:
    name: Build Image
    runs-on: ubuntu-latest

    steps:
      - name: Print secrets
        run: |
          echo ${{secrets.DOCKERHUB_USERNAME}} 
          echo ${{secrets.DOCKERHUB_TOKEN}}
    
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{secrets.DOCKERHUB_USERNAME}}
          password: ${{secrets.DOCKERHUB_TOKEN}}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build and export to Docker
        uses: docker/build-push-action@v4
        with:
          push: false
          load: true # Export to Docker Engine rather than pushing to a registry
          tags: ${{ github.run_id }}
          target: test
          cache-from: type=gha
          cache-to: type=gha,mode=max
          platforms: linux/amd64

        # for simple tests (npm test, etc.) just run a local image in docker
      - name: Unit Testing in Docker
        run: |
          docker run --rm ${{ github.run_id }} echo "run test commands here"

      - name: Docker metadata
        id: docker_meta
        uses: docker/metadata-action@v4
        with:
          images: xmischu/learn-gha
          flavor: |
            latest=false
          tags: |
            type=raw,value=01
            type=raw,value=latest,enable=${{ endsWith(github.ref, github.event.repository.default_branch) }}
            type=ref,event=pr
            type=ref,event=branch
            type=semver,pattern={{version}}

      - name: Docker build
        uses: docker/build-push-action@v4
        with:
          push: ${{github.event_name != 'pull_request'}}
          tags: ${{steps.docker_meta.outputs.tags}}
          labels: ${{steps.docker_meta.outputs.labels}}
          cache-from: type=gha
          cache-to: type=gha, mode=max
          platforms: linux/amd64, linux/arm64, linux/arm/v7
